'''Errors used in the program.'''

from typing import Optional

from aristoxenus.core.constants import (
    UNDERSCORE, 
    WHITESPACE
)


__all__ = [
    "AristoxenusError", 
    "ArgumentError", 
    "StringValidationError"
]


class AristoxenusError(Exception):
    '''Parent exception for all errors generated by this library.'''
    

class ArgumentError(AristoxenusError):
    '''Error signifying that an argument is unacceptable in some way.'''


class StringValidationError(AristoxenusError):
    '''
    Error signifying that the passed string cannot be validated in its
    context.
    '''
    def __init__(self, symbol: str, expected_category: str, message: Optional[str] = None) -> None:
        msg = f"({message})" if message else ""
        expected_category = expected_category.replace(UNDERSCORE, WHITESPACE)
        super().__init__(f"Unable to parse '{symbol}' as a '{expected_category}' {msg}." )
